#!/usr/bin/env python

import argparse, string, os, json 
def help():
	parser = argparse.ArgumentParser(description='This script converts traces from JSON into libsvm format.')
	parser.add_argument('benjsonfile', action='store', help='path to JSON tracefile with traces of benign apps') 
	parser.add_argument('maljsonfile', action='store', help='path to JSON tracefile with traces of malicious apps') 
        parser.add_argument('libsvmfile', action='store', help='path to output libsvm file.')
	return parser.parse_args()

def dict_to_list (leave_out, current_dict):
        return current_dict

def printLibSVMFormatted(vector, classification):
	return classification +' '+' '.join([str(pos+1)+':'+str(item) for pos,item in enumerate(vector)]) + '\n'

def printPlainFormatted(vector):
	return ' '.join(map(str,vector))

def main():
	args = help()

        with open(args.benjsonfile, 'r') as infile:
            ben_json_dict = json.load(infile)
        
        with open(args.maljsonfile, 'r') as infile:
            mal_json_dict = json.load(infile)


        ben_vector_list = dict_to_list([], ben_json_dict)
        mal_vector_list = dict_to_list([], mal_json_dict)

        with open(args.libsvmfile, 'w') as outfile:
            for vector in ben_vector_list:
                outfile.write(printLibSVMFormatted(vector, '+1'))
            for vector in mal_vector_list:
                outfile.write(printLibSVMFormatted(vector, '-1'))
            


if __name__ == "__main__":
	main()
