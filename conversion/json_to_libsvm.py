#!/usr/bin/env python

import argparse, string, os, json 
def help():
	parser = argparse.ArgumentParser(description='This script converts traces from JSON into libsvm format.')
	parser.add_argument('jsonfile', action='store', help='path to JSON tracefile') 
        parser.add_argument('libsvmfile', action='store', help='path to output libsvm file.')
	return parser.parse_args()

def dict_to_list (leave_out, current_dict):
        l = [] # the list to give back
        for item in current_dict:
            if item not in leave_out:
                l.extend(current_dict[item])
        return l

def printLibSVMFormatted(vector):
	return '0 '+' '.join([str(pos+1)+':'+str(item) for pos,item in enumerate(vector)]) + '\n'

def printPlainFormatted(vector):
	return ' '.join(map(str,vector))

def main():
	args = help()

        with open(args.jsonfile, 'r') as infile:
            json_dict = json.load(infile)

        vector_list = dict_to_list([], json_dict)

        with open(args.libsvmfile, 'w') as outfile:
            for vector in vector_list:
                outfile.write(printLibSVMFormatted(vector))
            

if __name__ == "__main__":
	main()
